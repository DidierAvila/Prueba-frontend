@model IEnumerable<Prueba.Web.Models.Tarea>

@{
    ViewData["Title"] = "Lista de Tareas";
}

<h1>Lista de Tareas</h1>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <a asp-action="Create" class="btn btn-primary">Crear Nueva Tarea</a>
    <div>
        <a asp-action="Index" class="btn btn-outline-secondary">Todas las Tareas</a>
        <a asp-action="Completed" class="btn btn-outline-success">Tareas Completadas</a>
        <a asp-action="TestApi" class="btn btn-outline-info">ðŸ”§ Test API</a>
    </div>
</div>

@if (ViewBag.ApiTest != null && (bool)ViewBag.ApiTest)
{
    <div class="alert alert-info" role="alert">
        <h6>ðŸ”§ Prueba de API Realizada</h6>
        <p><strong>URL:</strong> @ViewBag.ApiUrl</p>
        <p><strong>Tareas encontradas:</strong> @ViewBag.TareasCount</p>
        <p>La conexiÃ³n con la API estÃ¡ funcionando correctamente.</p>
    </div>
}

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsCompleted)
                </th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@(item.IsCompleted ? "table-success" : "")">
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @if (item.IsCompleted)
                        {
                            <span class="badge bg-success">Completada</span>
                        }
                        else
                        {
                            <span class="badge bg-warning">Pendiente</span>
                        }
                    </td>
                    <td>
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Editar</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Detalles</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Eliminar</a>
                            <form asp-action="ToggleComplete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm @(item.IsCompleted ? "btn-outline-secondary" : "btn-outline-success")">
                                    @(item.IsCompleted ? "Marcar Pendiente" : "Marcar Completada")
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info" role="alert">
        No hay tareas disponibles. <a asp-action="Create">Crear la primera tarea</a>
    </div>
}